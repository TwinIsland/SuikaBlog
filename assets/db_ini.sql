PRAGMA foreign_keys = ON;

CREATE TABLE Posts (
    PostID INTEGER PRIMARY KEY AUTOINCREMENT,
    Title VARCHAR(255) NOT NULL,
    Banner TEXT,
    Excerpt TEXT,
    Content TEXT NOT NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    DateModified DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UpVoted INT NOT NULL DEFAULT 0,
    Views INT DEFAULT 0
);

CREATE TABLE Visitors (
    VisitorID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL UNIQUE,
    Email TEXT,
    Website TEXT,
    Banned INTEGER,
    Ip VARCHAR(64) NOT NULL,
    UNIQUE(Name, Email)
);

CREATE TABLE Comment (
    CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
    PostID INTEGER NOT NULL,
    VisitorID INTEGER, 
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    Content TEXT NOT NULL,
    UpVoted INTEGER DEFAULT 0,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE CASCADE,
    FOREIGN KEY (VisitorID) REFERENCES Visitors(VisitorID) ON DELETE CASCADE
);

CREATE TABLE CommentPage (
    CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
    VisitorID INTEGER, 
    PageName VARCHAR(64) NOT NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    Content TEXT NOT NULL,
    UpVoted INTEGER DEFAULT 0,
    FOREIGN KEY (VisitorID) REFERENCES Visitors(VisitorID) ON DELETE CASCADE
);

CREATE TABLE Activity (
    ActivityID INTEGER PRIMARY KEY AUTOINCREMENT,
    VisitorID INTEGER,
    Description TEXT NOT NULL,
    CreateDate DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (VisitorID) REFERENCES Visitors(VisitorID)
);

CREATE TABLE Meta (
    MetaID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT UNIQUE NOT NULL,
    Type VARCHAR(32) NOT NULL
);

CREATE TABLE PostMeta (
    PostID INTEGER,
    MetaID INTEGER,
    PRIMARY KEY (PostID, MetaID),
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE CASCADE,
    FOREIGN KEY (MetaID) REFERENCES Meta(MetaID) ON DELETE CASCADE
);


-- Triggers
CREATE TRIGGER InsertCommentActivity AFTER INSERT ON Comment
BEGIN
    INSERT INTO Activity (visitorID, description, createDate)
    SELECT NEW.visitorID, 'comment on post: ' || Posts.Title, NEW.createDate
    FROM Posts
    WHERE Posts.PostID = NEW.postID;
END;

CREATE TRIGGER InsertCommentPageActivity AFTER INSERT ON CommentPage
BEGIN
    INSERT INTO Activity (visitorID, description, createDate)
    VALUES (NEW.visitorID, 'comment on page: ' || NEW.pageName, NEW.createDate);
END;